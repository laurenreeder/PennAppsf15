import sys
import urllib2
import urllib
import json
import hmac
import base64
import collections
import sha
from datetime import datetime

AWS_ACCESS_KEY_ID = "AKIAJKPJQGJNYMWPMR6Q"
AWS_SECRET_ACCESS_KEY = "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"
SERVICE = "AWSMechanicalTurkRequester"
CREATE_HIT_OP = "CreateHIT"

create_hit_req_str = "https://mechanicalturk.sandbox.amazonaws.com/?Service=AWSMechanicalTurkRequester" \
"&AWSAccessKeyId=AKIAJKPJQGJNYMWPMR6Q" \
"&Operation=%s" \
"&Signature=%s" \
"&Timestamp=%s" \
"&ResponseGroup.0=Minimal"

title_desc = "&Title=%s&Description=%s"

end_str = "&Reward.1.Amount=%s&Reward.1.CurrencyCode=USD&AssignmentDurationInSeconds=60&LifetimeInSeconds=31536000"

def create_hit_request():
    timestamp = datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")
    signature = create_signature(SERVICE, CREATE_HIT_OP, timestamp)
    requesturl = create_hit_req_str%(CREATE_HIT_OP, signature, timestamp) + title_desc%(urllib.quote("Image Classification"), urllib.quote("Please classify the image")) + "&" +  make_question(["Apple", "Orange"]) + end_str%("1")
    return requesturl

def get_balance_request():
    timestamp = datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%SZ")
    signature = create_signature(SERVICE, "GetAccountBalance", timestamp)
    requesturl = create_hit_req_str%("GetAccountBalance", signature, timestamp)
    return requesturl

def generate_timestamp(time):
    return time.strftime("%Y-%m-%dT%H:%M:%SZ")

def create_signature(service, operation, timestamp):
    my_sha_hmac = hmac.new(AWS_SECRET_ACCESS_KEY, service + operation + timestamp, sha)
    b64_encoded = urllib.quote(base64.encodestring(my_sha_hmac.digest()).strip())
    return b64_encoded

def make_question(labels):
    questionform = '<QuestionForm xmlns="http://mechanicalturk.amazonaws.com/AWSMechanicalTurkDataSchemas/2005-10-01/QuestionForm.xsd">'
    questionform += "<Question>"
    questionform += "<QuestionIdentifier>image_label</QuestionIdentifier>"
    questionform += "<IsRequired>true</IsRequired>"
    questionform += "<QuestionContent><Text>Which of these labels best describes the contents of this image?</Text></QuestionContent>"
    questionform += "<AnswerSpecification><SelectionAnswer><StyleSuggestion>radiobutton</StyleSuggestion><Selections>"
    for i, l in enumerate(labels):
        questionform += "<Selection><SelectionIdentifier>" + l + "<\SelectionIdentifier><Text>" + l + "<\Text><\Selection>"
    questionform += "<Selection><SelectionIdentifier>unknown<\SelectionIdentifier><Text>None of the above / Not Sure<\Text><\Selection><\Selections><\SelectionAnswer><\AnswerSpecification><\Question><\QuestionForm>"
    
    return urllib.urlencode(qusetionform)

def create_hit():
    requesturl = create_hit_request()
    print requesturl
    try:
        data = urllib2.urlopen(requesturl)
        try:
            response = data.read()
            print response
        except ValueError:
            sys.stderr.write('JSON ERROR\n')
            return None
    except urllib2.HTTPError as e:
        print e
        sys.stderr.write('BAD REQUEST\n')

create_hit()
# eventually, use a call to RegisterHITType 




